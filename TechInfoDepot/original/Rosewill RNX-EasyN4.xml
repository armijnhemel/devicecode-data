<page>
    <title>Rosewill RNX-EasyN4</title>
    <ns>0</ns>
    <id>17531</id>
    <revision>
      <id>381080</id>
      <parentid>365175</parentid>
      <timestamp>2024-08-16T18:35:47Z</timestamp>
      <contributor>
        <username>ShadowBot</username>
        <id>3357272</id>
      </contributor>
      <minor/>
      <comment>/* top */ clean up</comment>
      <origin>381080</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="19059" sha1="p3x1ditalbaq7tz09l3t166ih4chdvj" xml:space="preserve">{{Infobox Embedded System
|image1             = &lt;!-- Image filename --&gt;
|image1_size        = &lt;!-- Image size, ex.150px --&gt;
|caption            = &lt;!-- tagline --&gt;
|caption2           = &lt;!-- 2nd tagleine --&gt;
|pp                 = http://www.rosewill.com/products/1281/productDetail.htm
|sp                 = &lt;!-- Support page url only --&gt;
|dl                 = &lt;!-- Download page url only --&gt;
|fandom             = Rosewill_RNX-EasyN4
|wikidevi           = &lt;!-- wikidevi.wi-cat.ru page, included underscores --&gt;
|wikipedia          = &lt;!-- [[wikipedia:Main Page|Wikipedia]] Leave blank for none --&gt;
|ddwrtsupport       = Supported
|openwrtsupport     = Supported
|tomatosupport      = &lt;!-- Incompatible, Not Supported, Partial Support, Supported, WIP, Unofficially, --&gt;
|gargoylesupport    = &lt;!-- Incompatible, Not Supported, Partial Support, Supported, WIP, Unofficially, --&gt;

|brand              = Rosewill
|model              = RNX-EasyN4
|submodelappend     = &lt;!-- yes, for space --&gt;
|submodel           = &lt;!-- SubModel number, Leave blank for unknown --&gt;
|revision           = &lt;!-- Model Revision, Leave blank for none or unknown --&gt;
|subrevision        = &lt;!-- Model Subrevision, Leave blank for none or unknown --&gt;
|model_part_num     = 
|page_start_date    = 09/16/2010
|page_start_origon  = https://infodepot.fandom.com/wiki/Rosewill_RNX-EasyN4
|wlclass            = N300
|series             = &lt;!-- Device series --&gt;
|type               = wireless router
|sernum             = &lt;!-- First 4 or so for easy version identification --&gt;
|fcc_id             = U2M-SR97908003
|icid               = &lt;!-- Industry Canada Identification number, Leave blank for unknown --&gt;
|us_id              = &lt;!-- US ID number --&gt;
|boardid            = &lt;!-- Board Identification, Leave blank for none --&gt;
|ecc_id             = &lt;!-- eec-id --&gt;

|cpu1chip1          = Ralink;RT3052;
|cpu1_cores         = 1
|cpu1_type          = MIPS 24KEc
|cpu1_type_rev      = &lt;!-- CPU1 type Revision, Leave blank for unknown --&gt;
|cpu1spd            = 384 &lt;!-- 384 MHz --&gt;
|is_doc             = 
|bus                = &lt;!-- 8-bit, 16-bit, 32-bit, 64-bit, Leave blank for none --&gt;

|flash1type         = Parallel
|fla1_num           = &lt;!-- 1,2,3,4 --&gt;
|fla1chip           = &lt;!-- MX 29LV320CT? --&gt;
|flash1size         = 4
|flash1maxsize      = &lt;!-- Maximum size firmware can be in bytes --&gt;

|ram1type           = &lt;!-- DDR,DDR2,DDR3,DDR4, --&gt;
|ram1type1          = &lt;!-- SO-DIMM,SDRAM, --&gt;
|ram1spd            = &lt;!-- RAM speed --&gt;
|ram1size           = 32
|ram1chip           = &lt;!-- Brand;Model;Extra, info; --&gt;
|ram1_num           = &lt;!-- Number of Ram chips --&gt;
|nvramsize          = &lt;!-- 32, 60, 64, etc... in kb, Leave blank for unknown --&gt;

|eth_cpu            = true
|sw_cpu             = true
|wan_ports          = 1
|wan_speed          = 100MbE
|lan_ports          = 4
|lan_speed          = 100MbE
|ethstandard        = IEEE 802.3/3u
|portbasedvlan      = &lt;!-- Support for port based vlan tagging, Leave blank for unknown --&gt;
|802.1qvlan         = &lt;!-- Support for 802.1q vlan tagging, Leave blank for unknown --&gt;
|auto_mdix          = &lt;!-- mdix support --&gt;
|sup_jumbo          = &lt;!-- Jumbo frames support --&gt;
|ethoui             = 00:02:6F
|oui                = 00:02:6F

|bootwait           = &lt;!-- On or Off, Leave blank for unknown --&gt;
|stockbootloader    = U-Boot;;;
|stockos            = Linux;;;

|exp_if_types       = &lt;!-- Expansion Interface types, Leave blank for none --&gt;
|exp_sim_num        = &lt;!-- Number of sim Slots, Leave blank for none --&gt;
|exp_pcmcia_num     = &lt;!-- Number of pcmcia ports, Leave blank for none --&gt;
|exp_expcard_num    = &lt;!-- Number of Expresscard ports, Leave blank for none --&gt;
|exp_minipci_num    = &lt;!-- Number of Mini PCI Slots, Leave blank for none --&gt;
|exp_minipcie_num   = &lt;!-- Number of Mini PCIexpress Slots, Leave blank for none --&gt;
|exp_usb_num        = &lt;!-- Number of USB Ports, Leave blank for none --&gt;
|exp_cf_num         = &lt;!-- Number Compact Flash Slots, Leave blank for none --&gt;
|exp_sdmmc_num      = &lt;!-- Number SD/MMC Slots, Leave blank for none --&gt;
|exp_ide_num        = &lt;!-- Number of ide ports, Leave blank for none --&gt;
|exp_ata_num        = &lt;!-- Number of ATA Ports, Leave blank for none --&gt;
|exp_sata_num       = &lt;!-- Number of sata ports, Leave blank for none --&gt;
|exp_esata_num      = &lt;!-- Number of esata ports, Leave blank for none --&gt;
|exp_parallel       = &lt;!-- Number of parallel ports, Leave blank for none --&gt;
|exp_sfp_num        = &lt;!-- Number of sfp ports, Leave blank for none --&gt;
|exp_M.2            = &lt;!-- Number of M.2 ports, Leave blank for none --&gt;
|exp_hdmi_num       = 
|usb_hub            = &lt;!-- USB hub compatibility --&gt;

|pwr_volt_type      = VDC
|pwr_vdc            = 12
|pwr_amp_dc         = 1
|pwr_conn           = barrel
|pwr_barrel_outer   = &lt;!-- Outer barrel size in mm --&gt;
|pwr_barrel_inner   = &lt;!-- Inner barrel size in mm --&gt;
|pwr_barrel_len     = &lt;!-- Length of barrel --&gt;
|pwr_pol            = &lt;!-- Connector polarity --&gt;

|serial             = yes,, internal,, pinout marked,, unpopulated,, 3.3V TTL,, 6-pin header,, (57600 8N1)
|jtag               = &lt;!-- Full JTAG info --&gt;

|specialfeat        = &lt;!-- Features that don't fit any place else, Leave blank for none --&gt;
|flags              = &lt;!-- flags, Leave blank for none --&gt;
|addchip            = 2.4GHz Power Amplifier IC;Richwave;RTC6693;884, 6693, A913;2;
|802dot11_protocols = bgn

|defaulip           = 192.168.0.1
|defaultlogin       = admin
|defaultpass        = admin
|defaultssid        = RosewillXXXXXX
|defaultssid_regex  = ^Rosewill[A-F0-9]{6}$
|default_ch         = &lt;!-- Defaults channel(s) Radio(s) are set to --&gt;
|manuf              = &lt;!-- Manufacturer --&gt;
|manuf_model        = &lt;!-- Manufacturer Model --&gt;
|manuf_rev          = &lt;!-- Manufacturer Revision --&gt;
|is_manuf           = No
|tpfirmware         = DD-WRT, OpenWrt (unofficially)

|availability       = &lt;!-- Market availability --&gt;
|eoldate            = &lt;!-- End of Life date --&gt;
|fccapprovdate      = 10/13/2008
|estreldate         = &lt;!-- Estimated release date --&gt;
|estprice           = &lt;!-- Estimated retail price in US dollars --&gt;
|upc                = 898745018103
|ean                = &lt;!-- EAN number --&gt;
|dx_sku             = &lt;!-- DealExtreme sku --&gt;
|newegg             = &lt;!-- newegg item number --&gt;
|asin               = B002POHFQG
|asin_country       = &lt;!-- ASIN country --&gt;
|asin2              = &lt;!-- ASIN number --&gt;
|asin_country2      = &lt;!-- ASIN country --&gt;
|countrymanuf       = &lt;!-- Country device was manufactured in --&gt;

|buttons            = &lt;!-- buttons available --&gt;
|led                = &lt;!-- Led colors and descriptions --&gt;
|dimensions         = &lt;!-- Size of device {{convert |length|x|widthordepth|x|height|in|mm}} --&gt;
|weight             = &lt;!-- Weight of device {{convert|weight|oz|g}} --&gt;

|wi1_if_name        = 
|rad1chip1cpu       = true
|rad1oui            = &lt;!-- Only if different from above OUI --&gt;
|rad1_ant_conn      = &lt;!-- Leave blank for unknown --&gt;
|rad1txchains       = 2
|rad1rxchains       = 2
|rad1sstreams       = 2
|rad1stand          = IEEE 802.11b/g/n
|rad1n              = 300
|rad1g              = 54
|rad1b              = 11
|rad1freq           = 2.4

}}{{TIDTOC|embedded}}
==Overview==
This router is flashable to '''DD-WRT''' or '''OpenWrt''' (trunk, the ESR-9753 build seems to work fine), however, this will require serial access. There is no firmware currently available to allow flashing via the webGUI ([http://www.dd-wrt.com/phpBB2/viewtopic.php?t=54802&amp;start=30 see this forum thread for a utility to work with the firmware format]).

The default SSID is '''RosewillXXXXXX''' where '''XXXXXX''' is the last three octets of the wireless interface MAC address (assumed capitalized hex letters).

==Links of Interest==
*[http://www.dd-wrt.com/phpBB2/viewtopic.php?p=367964 ''Rosewill RNX-Easy4N'' on the '''DD-WRT''' Forums]
*[http://www.dd-wrt.com/phpBB2/viewtopic.php?t=66804 ''Rosewill RNX-EasyN400 DD-WRT?'' on the '''DD-WRT''' Forums] (w/ internal shot)
:&quot;ESR-9752-1.00 LFP  7016A0251000&quot; is silkscreened on the board shown.

==Flashing==
{{Flashnotice}}
===Flashing dd-wrt===
Re-branded [[EnGenius ESR-9752]], Serial Flash firmware.bin, WAN,LAN LEDs do not work after flash

Supported by dd-wrt as of = ESR9752 v.24 sp2 - build 12527

mshneour [http://www.dd-wrt.com/phpBB2/viewtopic.php?p=435622#435622 wrote]

Well, I finally got DD-WRT flashed to my Rosewill RNX-EasyN4 router!

I can't thank bsanborn enough for his extremely generous and well articulated replies to my questions. (Thanks again.)

The keys to my success here were several...

(1) Serial Port Pinout. The serial port pinout on the motherboard is (referencing my photos): Pin3=RX, Pin4=TX, Pin5=GND and Pin6=PWR.

(2) Wiring Header to Serial Port. I first soldered a 6-pin header block to the serial port. (I used one made by &quot;Molex,&quot; the company which developed the ubiquitous Molex power connector found on every computer power supply cable on the planet. Theirs is a more robustly-made version of the more common &quot;breakaway&quot; header blocks.) Then I wired the TX, RX and GND conductors from my USB-serial adapter cable to Pins 3, 4 and 5, respectively on the serial header block. (Note that the TX conductor was wired to Pin 3, and the RX connector was wired to Pin 4, on the serial header. So, the connections were: TX-RX, RX-TX and GND-GND. The PWR pin was not used. Note: bsanborn asked me to mention that some serial cables are configured such that a TX-TX and RX-RX connection must be made. That was apparently the case with his cable.) I should also mention that I used a USB-serial adapter cable made by FTDIChip, along with their published drivers. The particular model I used was a USB-serial cable, with a built-in 5V to 3.3V (TTL) converter. Again, I don’t know that this type of cable is absolutely necessary, but others on these forums have stated that to use a standard 5V-5V USB-serial cable can fry the delicate electronics on the router motherboard.

(3) Serial Console. As advised by bsanborn, I set up the USB-serial adapter cable to use a transfer rate of 57600 kbps, with 8 data bits, 1 stop bit, no parity and no flow control. The 57600 kbps transfer rate was key -- my serial adapter cable did not work at any other speed. (Certain other cables run at 115200 kbps.) I set these parameters using the Putty console program. (A tip: once you have made the proper serial port settings, save them as the default. That way, if you need to close and re-open the program, Putty will remember your settings, thereby saving you precious minutes and brain cells.)

(4) Acquiring the Flash Screen. Once connected to the serial console on the router with Putty running, I disconnected the router power supply, and then reconnected it. Immediately upon reconnecting the power to the router, I starting pressing the &quot;2&quot; key repeatedly. (Sometimes, this step needed to be repeated in order to get the console to communicate the &quot;2&quot; to the router at the right time.) The &quot;2&quot; option is the one on the RNX-EasyN4 (or Senao ESR-9752) router board which allows for firmware (&quot;system code&quot;) to be sent to the Flash chip via TFTP. If the &quot;2&quot; option is sent in time to the serial port, then the following screen comes up on the console:

2: System Load Linux Kernel then write to Flash via TFTP.
Warning!! Erase Linux in Flash then burn new one. Are you sure?(Y/N)

As you might expect, I then hit &quot;Y&quot; and then Enter.

(5) Configuring and Starting TFTP. Prior to proceeding with the console, I configured and started the TFTP server. First, I plugged an Ethernet cable into one of the router's LAN ports, and the other end into the network adapter on my computer. Next, I set the network adapter to an IP address of 192.168.99.2. (I could have used any number in the 192.168.99.xx subnet, other than .8 or .9. The reason will be clear in a moment.) I set the subnet mask to 255.255.255.0, and left the gateway and DNS addresses blank. After that, I configured and started the TFTP server. I used the Solar Winds TFTP server, which is both free and very simple in layout. Before starting, I turned off the WiFi radio on my computer. (I also suspended antivirus and firewall, although I am not certain that that was necessary.) Upon starting the TFTP server, I confirmed that it was &quot;bound&quot; to the network adapter's IP address (192.168.99.2). I set the &quot;root&quot; for the server as &quot;C:\,&quot; and placed a copy of the console firmware (firmware.bin) in the C:\ root directory. Then I started the TFTP server by hitting “Start” on the General screen of the program.

(6) Here Comes the Flash. Going back to the console, the following appeared on the screen:

Please Input new ones /or Ctrl-C to discard
Input device IP (192.168.99.9) ==:

The prompt is asking for the IP address of the router. And that (as the prompt itself indicates) is &quot;192.168.99.9&quot;. So I typed that address after the : prompt, and then hit Enter.

The following then appeared on the screen:

Input server IP (192.168.99.8 ) ==:

The prompt here is asking for the IP address of the TFTP server. I had already bound the TFTP server to my computer network adapter's IP address (explained above), and that became the IP address of the server. So, I typed that address (192.168.99.2) after the : prompt, and then hit Enter.

Next, the following appeared on the console screen:

Input Linux Kernel filename (uImageESR-9752-rosewill) ==:

This is an easy one. The firmware (at least in this case) is &quot;firmware.bin.&quot; As it had already been placed in the defined root directory for the TFTP server, all the prompt is asking for here is the name of the firmware. So, I typed &quot;firmware.bin&quot; after the : prompt, and then hit Enter.

(7) Voila! Success! After hitting the final Enter in the console window, things started to happen. The flash process took only about three minutes, but to ensure that I did not end the flash session too soon, I set a timer for five minutes. After that, I confirmed the existence of DD-WRT on the router by hitting Enter a couple of times in the console window, and received the following prompt:

DD-WRT v24-sp2 std (c) 2009 NewMedia-NET GmbH
Release: 03/24/10 (SVN revision: 14144)

DD-WRT login:

Remembering that the DD-WRT default username and password are &quot;root&quot; and &quot;admin,&quot; respectively, I entered these parameters, and got the following screen:

&lt;pre&gt;
==========================================================

____ ___     __        _______   _____       ____   _   _
| _ \| _ \   \ \  \/  / /|  _ \ |_ _ _| __ _ |___ \| | | |
|| | || ||____\ \ /\ / / | |_) |  | |  \ \ / / __) | |_| |
||_| ||_||_____\ V  V /  |  _ &lt;   | |   \ V / / __/| __ _ |
|___/|___/      \_/\_/   |_| \_\  |_|    \_/ |_____|   |_|

DD-WRT v24-sp2
http://www.dd-wrt.com

==========================================================
Jan 1 00:00:20 login[1079]: root login on 'console'


BusyBox v1.13.4 (2010-03-24 11:01:00 CET) built-in shell (ash)
Enter 'help' for a list of built-in commands.

root@DD-WRT:
&lt;/pre&gt;

So far, so good.

(8 ) Wrapping Up. I then unplugged the router, and let it sit for 30 seconds. Following that, I plugged in the router again, and performed the infamous &quot;30-30-30&quot; hard reset. I don't know that this step is absolutely necessary, but many on these forums swear by it, so I did it. Thereafter, I reset the Ethernet adapter on my computer to DHCP, opened up a browser window (I used 32-bit Internet Explorer 8.xx), and entered &quot;192.168.1.1,&quot; the default subnet and IP address for DD-WRT. (The screen took a bit to come up.) When asked for a new username and password, I entered them, and was now in the GUI for DD-WRT.

(9) A Subsequent Flash. I should mention that after flashing the initial &quot;firmware.bin&quot; to the router via the serial console, I then uploaded a later &quot;Webflash&quot; build of the firmware. Using DD-WRT's Administration/Firmware Update screen, I uploaded the firmware file, and then hit &quot;Upgrade.&quot; The screen started counting down from 300, which is another way of saying that five minutes is a good rule-of-thumb time period to allow for flashing. (I have found in other instances that the countdown window can cease before completion, so I set a separate five minute timer.) After flashing was complete, I unplugged the router, waited 30 seconds, and then plugged it in again. Everything was working perfectly. (I should mention that purists on these forums recommend another 30-30-30 hard reset even after flashing via DD-WRT’s GUI interface, but I have never found that step to be necessary.)

(10) Other Concerns and Considerations. There is some mention on these forums that Windows Vista and 7 are not good OS's for flashing. (Something to do with the way they handle TCP.) I used 64-bit Windows 7, and encountered no issues. Also, there is some discussion regarding the need to run the console and/or TFTP sessions as an &quot;Administrator.&quot; Again, I found this step unnecessary.

I hope this rather longish post may be of some help to other “noobs” like myself who are still learning the whys and wherefores of DD-WRT, particularly in the area of initial flashing. We have many experienced EE’s and computer programmers on these forums, all of whom provide valued guidance to others. It is not, however, necessary for anyone to be an expert in these fields – rather, what is required is a working facility with many of these disciplines, and above all a willingness to learn and to make mistakes (which is tantamount to learning).

A final comment or two… I corresponded with Brainslayer, who finally replied and stated that it was NOT his intention to treat the Senao/Engenius ESR-9752 as a “professional” platform, which would necessitate activation. Anyone who now checks the router database will note that this model router appears as the only Senao router which does not require activation. Given that clarification, and the fact that now several of us have gotten the Senao firmware to successfully run on this Rosewill router, I would like to ask Brainslayer (or any of the forum moderators who may have better access to him) to list the Rosewill RNX-EasyN4 in the router database as having support with DD-WRT. That would make it the first Rosewill router to be so designated.

When I get a bit more motivated, I will craft a guide to the procedure outlined above, for inclusion in the DD-WRT Wiki. Until then, my sincere thanks again to all who helped me learn the various pieces of this puzzle. And in particular, a hearty handshake to bsanborn, who was most gracious and generous with his help and guidance. Smile
_________________
Mark

===Flashing OpenWrt===
{{OpenWrt
|techdata                  = 
|wikipage                  = 
|forumpage                 = 
|forumpage2                = 
|forumpage3                = 
|github                    = 
|target                    = 
|subtarget                 = 
|arch                      = 
|support_started_version   = ?
|current_supported_version = ?
|comment                   = 
}}
Please insert instructions here

[[Category:English Documentation]]</text>
      <sha1>p3x1ditalbaq7tz09l3t166ih4chdvj</sha1>
    </revision>
  </page>