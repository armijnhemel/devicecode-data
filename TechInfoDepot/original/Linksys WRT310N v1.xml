<page>
    <title>Linksys WRT310N v1</title>
    <ns>0</ns>
    <id>5958</id>
    <revision>
      <id>378947</id>
      <parentid>358417</parentid>
      <timestamp>2024-08-16T02:17:55Z</timestamp>
      <contributor>
        <username>ShadowBot</username>
        <id>3357272</id>
      </contributor>
      <minor/>
      <comment>/* top */clean up, replaced: hynix → SK hynix, SK SK hynix → SK hynix</comment>
      <origin>378947</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="30319" sha1="88pqpblo2hi1vk6443muyrxxdrj3r5m" xml:space="preserve">{{Infobox Embedded System
|image1             = Linksys WRT310N.jpg
|image1_size        = 150px
|caption            = Wireless-N Gigabit Router
|caption2           = &lt;!-- 2nd tagleine --&gt;
|pp                 = &lt;!-- product page url only --&gt;
|sp                 = http://support.linksys.com/en-us/support/lbc/WRT310N
|dl                 = &lt;!-- Download page url only --&gt;
|fandom             = Linksys_WRT310N_v1.0
|wikidevi           = Linksys_WRT310N_v1
|wikipedia          = &lt;!-- [[wikipedia:Main Page|Wikipedia]] Leave blank for none --&gt;
|ddwrtsupport       = Supported
|openwrtsupport     = &lt;!-- Incompatible, Not Supported, Partial Support, Supported, WIP, Unofficially, --&gt;
|tomatosupport      = Supported
|gargoylesupport    = &lt;!-- Incompatible, Not Supported, Partial Support, Supported, WIP, Unofficially, --&gt;

|brand              = Linksys
|model              = WRT310N
|submodelappend     = &lt;!-- yes, for space --&gt;
|submodel           = &lt;!-- SubModel number, Leave blank for unknown --&gt;
|revision           = v1
|subrevision        = &lt;!-- Model Subrevision, Leave blank for none or unknown --&gt;
|model_part_num     = 
|page_start_date    = 08/16/2010
|page_start_origon  = https://infodepot.fandom.com/wiki/Linksys_WRT310N_v1.0
|wlclass            = N300
|series             = &lt;!-- Device series --&gt;
|type               = wireless router
|sernum             = CSF01
|fcc_id             = Q87-WRT310N
|icid               = 3839A-WRT310N
|us_id              = &lt;!-- US ID number --&gt;
|boardid            = &lt;!-- Board Identification, Leave blank for none --&gt;
|ecc_id             = &lt;!-- eec-id --&gt;

|cpu1chip1          = Broadcom;BCM4705G;BCM4705GKFBG, CG0807 P12, 857940 01;
|cpu1_cores         = 1
|cpu1_type          = MIPS
|cpu1_type_rev      = BMIPS3300 (R1)
|cpu1spd            = 300 &lt;!-- 300 MHz --&gt;
|is_doc             = 
|bus                = &lt;!-- 8-bit, 16-bit, 32-bit, 64-bit, Leave blank for none --&gt;

|flash1type         = Parallel
|fla1_num           = &lt;!-- 1,2,3,4 --&gt;
|fla1chip           = Eon;EN29LV320AB-70TCP;Winbond WI9B320ABT7H or Samsung K8P3215UQB or EON EN29LV320;
|flash1size         = 4
|flash1maxsize      = 3801088

|ram1type           = &lt;!-- DDR,DDR2,DDR3,DDR4, --&gt;
|ram1type1          = &lt;!-- SO-DIMM,SDRAM, --&gt;
|ram1spd            = &lt;!-- RAM speed --&gt;
|ram1size           = 32
|ram1chip           = SK hynix;HY5DU561622ETP-D43;
|ram1_num           = &lt;!-- Number of Ram chips --&gt;
|nvramsize          = 32

|eth_cpu            = true
|sw1chip            = Broadcom;BCM5397;
|wan_ports          = 1
|wan_speed          = 1GbE
|lan_ports          = 4
|lan_speed          = 1GbE
|ethstandard        = IEEE 802.3/3u/3ab
|portbasedvlan      = &lt;!-- Support for port based vlan tagging, Leave blank for unknown --&gt;
|802.1qvlan         = &lt;!-- Support for 802.1q vlan tagging, Leave blank for unknown --&gt;
|auto_mdix          = &lt;!-- mdix support --&gt;
|sup_jumbo          = &lt;!-- Jumbo frames support --&gt;
|ethoui             = 00:1E:E5, 00:21:29, 00:22:6B, 00:23:69
|oui                = 00:1E:E5, 00:21:29, 00:22:6B, 00:23:69

|bootwait           = &lt;!-- On or Off, Leave blank for unknown --&gt;
|stockbootloader    = CFE;;;
|stockos            = Linux;;;

|exp_if_types       = &lt;!-- Expansion Interface types, Leave blank for none --&gt;
|exp_sim_num        = &lt;!-- Number of sim Slots, Leave blank for none --&gt;
|exp_pcmcia_num     = &lt;!-- Number of pcmcia ports, Leave blank for none --&gt;
|exp_expcard_num    = &lt;!-- Number of Expresscard ports, Leave blank for none --&gt;
|exp_minipci_num    = &lt;!-- Number of Mini PCI Slots, Leave blank for none --&gt;
|exp_minipcie_num   = &lt;!-- Number of Mini PCIexpress Slots, Leave blank for none --&gt;
|exp_usb_num        = &lt;!-- Number of USB Ports, Leave blank for none --&gt;
|exp_cf_num         = &lt;!-- Number Compact Flash Slots, Leave blank for none --&gt;
|exp_sdmmc_num      = &lt;!-- Number SD/MMC Slots, Leave blank for none --&gt;
|exp_ide_num        = &lt;!-- Number of ide ports, Leave blank for none --&gt;
|exp_ata_num        = &lt;!-- Number of ATA Ports, Leave blank for none --&gt;
|exp_sata_num       = &lt;!-- Number of sata ports, Leave blank for none --&gt;
|exp_esata_num      = &lt;!-- Number of esata ports, Leave blank for none --&gt;
|exp_parallel       = &lt;!-- Number of parallel ports, Leave blank for none --&gt;
|exp_sfp_num        = &lt;!-- Number of sfp ports, Leave blank for none --&gt;
|exp_M.2            = &lt;!-- Number of M.2 ports, Leave blank for none --&gt;
|usb_hub            = &lt;!-- USB hub compatibility --&gt;

|pwr_volt_type      = VDC
|pwr_vdc            = 12
|pwr_amp_dc         = 1
|pwr_conn           = barrel
|pwr_barrel_outer   = &lt;!-- Outer barrel size in mm --&gt;
|pwr_barrel_inner   = &lt;!-- Inner barrel size in mm --&gt;
|pwr_barrel_len     = &lt;!-- Length of barrel --&gt;
|pwr_pol            = &lt;!-- Connector polarity --&gt;

|serial             = yes,, internal,, 5-pad header,, unpopulated,, 3.3V TTL,, (115200 8N1)
|jtag               = yes

|specialfeat        = &lt;!-- Features that don't fit any place else, Leave blank for none --&gt;
|flags              = &lt;!-- flags, Leave blank for none --&gt;
|addchip            = 2.4GHz Power Amplifier IC;Skyworks;SE2528L;SiGe, 2528L, 8201Y;2;
|802dot11_protocols = bgn

|defaulip           = 192.168.1.1
|defaultlogin       = &lt;!-- Leave blank --&gt;
|defaultpass        = admin
|defaultssid        = linksys
|defaultssid_regex  = 
|default_ch         = &lt;!-- Defaults channel(s) Radio(s) are set to --&gt;
|manuf              = CyberTAN
|manuf_model        = &lt;!-- Manufacturer Model --&gt;
|manuf_rev          = &lt;!-- Manufacturer Revision --&gt;
|is_manuf           = No
|tpfirmware         = DD-WRT, Tomato (shibby), TomatoUSB

|availability       = &lt;!-- Market availability --&gt;
|eoldate            = &lt;!-- End of Life date --&gt;
|fccapprovdate      = 12/14/2007
|estreldate         = &lt;!-- Estimated release date --&gt;
|estprice           = &lt;!-- Estimated retail price in US dollars --&gt;
|upc                = &lt;!-- UPC number --&gt;
|ean                = &lt;!-- EAN number --&gt;
|dx_sku             = &lt;!-- DealExtreme sku --&gt;
|newegg             = &lt;!-- newegg item number --&gt;
|asin               = B000Z3XXR4
|asin_country       = US
|asin2              = &lt;!-- ASIN number --&gt;
|asin_country2      = &lt;!-- ASIN country --&gt;
|countrymanuf       = China

|buttons            = &lt;!-- buttons available --&gt;
|led                = &lt;!-- Led colors and descriptions --&gt;
|dimensions         = 8.0&quot; x 6.3&quot; x 1.3&quot;
|weight             = &lt;!-- Weight of device {{convert|weight|oz|g}} --&gt;

|wi1_if_name        = 
|rad1chip1          = Broadcom;BCM4321;BCM4321LKFBG, UN0810 P21, 861512 N3;
|rad1chip2          = Broadcom;BCM2055;BCM2055KFBG, HE0823 P20, 875740 N3;
|rad1oui            = &lt;!-- Only if different from above OUI --&gt;
|rad1_ant_conn      = Internal
|rad1txchains       = 2
|rad1rxchains       = 2
|rad1sstreams       = 2
|rad1stand          = IEEE 802.11b/g/n
|rad1n              = 300
|rad1g              = 54
|rad1b              = 11
|rad1freq           = 2.4
|rad1correv         = 12
|rad1cap            = &lt;!-- radio capabilities, Leave blank for none or unknown --&gt;

}}{{TIDTOC|embedded}}
==Overview==
&quot;3763-17140302R REV:XB&quot; is silkscreened on the board shown below.

The default SSID is '''linksys'''.

==Links of Interest==
===Wikis===
*[http://www.dd-wrt.com/wiki/index.php/Linksys_WRT310N_v1.0 On the '''DD-WRT''' Wiki]

===Forums===
====DD-WRT Forum threads====
*[http://www.dd-wrt.com/phpBB2/viewtopic.php?t=26355 ''ddwrt WRT310N Support''] (high res pictures on page 3)
*[http://www.dd-wrt.com/phpBB2/viewtopic.php?t=42949 ''jtag wrt310n''] (additional pictures)
*[http://www.dd-wrt.com/phpBB2/viewtopic.php?p=642220 ''WRT310N v1 Client / Repeater toubles''] (OUI 00:22:6B)

====OpenWrt Forum threads====
*[https://forum.openwrt.org/viewtopic.php?id=18188 ''Linksys WRT310N?'']

==Flashing==
{{Flashnotice}}
===Flashing dd-wrt===
{{DDWRTNotice|microno}}
{{DDWRTNotice|k26req}}
Supported by dd-wrt as of = v24 build 9524

The WRT310N accepts ''only'' the mini, standard, and VPN builds; '''no other versions are supported''' on this device. Do not even attempt to flash it with the micro (does not support gigabit ethernet so switch will not work for LAN ports) or mega-build (requires 8MB of flash, WRT310N only has 4MB), you will end up with a non-responding router or worse, a very expensive brick! Flashing a virgin WRT310N with the default Linksys firmware will require a special &quot;trailed&quot; mini-build to be flashed first. You should use a build from the BS Broadcom folder 12874 for the initial flash. The name of this file specifically is &quot;dd-wrt.v24_mini_wrt310n.bin&quot;. You may proceed to flash it with a generic STD or VPN build next. Remember to do the 30/30/30 Hard Reset after every successful flash. It is absolutely essential.

The proper process for flashing is:

# Read Note 1 of the peacock announcement http://www.dd-wrt.com/phpBB2/viewtopic.php?t=51486
# Read Note 3 of the peacock announcement
# Download svn 12874 dd-wrt.v24_mini_wrt310n.bin ftp://dd-wrt.com/others/eko/BrainSlayer-V24-preSP2/09-08-09-r12874/broadcom/dd-wrt.v24_mini_wrt310n.bin
# Do a HARD reset on your router. You will not get a password renewal page as you have stock linksys firmware on the router still.
# Plug a cable into the lan port of the router and your computer, and disable any wireless to the computer. Disable all firewalls and virus protection. (Setting your computer to a static IP should not be required)
# Set your browser to 192.168.1.1. This will open up the linksys webgui
# Enter the username admin and password admin
# Go to the administration tab. Click on firmware upgrade.
# BROWSE to the dd-wrt.v24_mini_wrt310n.bin file you downloaded.
# Click on the upgrade button and WAIT for the upgrade successful message.
# Power cycle your router. (very important) WAIT until you can relogin at 192.168.1.1
# Do a PROPER HARD 30-30-30 reset on your router (very important) WAIT until you can login at 192.168.1.1
# Click on any tab. Reset your username/password by TYPING in a new username/password
# Configure your router

You can now upgrade to any generic dd-wrt build except Mega and Micro. Be sure to always do a hard reset prior to flashing another build, do a power cycle followed by another hard reset after flashing, and NEVER re-use a configuration file from a previous build or another router. Reconfigure from scratch.
[http://www.dd-wrt.com/phpBB2/viewtopic.php?t=54817 Recovery] information available in this thread.

===Flashing Tomato===
Please insert instructions here

==Upgrading==
{{Upgrade dd-wrt}}

==JTAG-Serial Info==
===JTAG===
====JTAG Pinouts====
 nTRST   1o o2	GND
   TDI   3o o4	GND
   TDO   5o o6	GND
   TMS   7o o8	GND
   TCK   9o o10	GND
 nSRST  11o o12  N/C

====JTAG Recovery====
To perform JTAG recovery, you'll need to solder a JTAG header onto the appropriate pads on the router's board.  [http://www.tiaowiki.com/w/Debrick_Routers_Using_JTAG_Cable Debricking a router via JTAG] is a common procedure with generally the same steps:
# Solder on JTAG header to the correct place on the board
# Connect the JTAG cable's signal wires to the correct pins
# Run software to clear the router's [http://www.tiaowiki.com/w/Debrick_Routers_Using_JTAG_Cable#NVRAM nvram] and [http://www.tiaowiki.com/w/Debrick_Routers_Using_JTAG_Cable#Kernel kernel] storage areas in flash memory
# Re-flash the router with a new kernel (firmware)
To complete the procedure, you'll need:
# Screwdriver with Torx bits &amp; flathead bit (for prying)
# Soldering iron
# Lead free electronics solder
# [http://zjtag.sourceforge.net/cables.shtml JTAG Cable] (I used a Xilinx Parallel Cable III DLC5, but any supported by tjtag will do)
# JTAG Software
# A kernel to re-flash the device with

I recommend [https://sourceforge.net/projects/tjtag/ tjtag].  Source Code can be found here: https://github.com/oxplot/tjtag-pi.  You may also want to try [http://zjtag.sourceforge.net/ zjtag] or one of the [https://github.com/trinitronx/HairyDairyMaid_WRT54G_Debrick_Utility#forks--modifications forks listed here]

For the wrt310n, you need a mini build of dd-wrt with a special &quot;310N&quot; header for the first flash.  I had success using the [http://www.dd-wrt.com/phpBB2/download.php?id=9996 custom build] that redhawk0 posted in [http://www.dd-wrt.com/phpBB2/viewtopic.php?t=54817 this forum thread], but you may have good results with any mini brainslayer build after March 2009.  The [[dd-wrt:Linksys_WRT310N_v1.0|official wrt310n dd-wrt wiki page]] recommends this build: [ftp://ftp.dd-wrt.com/others/eko/BrainSlayer-V24-preSP2/2010/08-12-10-r14929/broadcom/dd-wrt.v24_mini_wrt310n.bin BrainSlayer-V24-preSP2-2010-08-12-10-r14929-dd-wrt.v24_mini_wrt310n.bin]

====== Soldering on a JTAG header ======
[[File:Wrt310n jtag header.jpg|thumb|220x220px]]
To solder on a JTAG header to the wrt310n, you first need to open up the plastic chassis using a torx tamper-resistant security bit (#T-9H).  Next, gently pry open the plastic chassis near the left and right sides of the router.  There should be 2 plastic clips on either side of the top clamshell piece that you'll need to release.  There are also 2 plastic clips near the front of the bottom clamshell piece that need to be released.  After the plastic clamshell chassis is opened, you should see 2 potential pin header locations on the lower right of the board.  The one to the left with the through-holes is NOT the correct place to solder the JTAG header.

The one to the right with copper pads is the CORRECT one (See image near bottom right where pin header is soldered)

====== Connecting the JTAG Cable ======
[[File:Wrt310n JTAG pinout top PCB.jpg|thumb|220x220px]]
In order to connect the JTAG cable you will have to identify the number of each pin.  The [http://infodepot.wikia.com/wiki/Linksys_WRT310N_v1.0#JTAG_Pinouts correct pinout is listed above].  To identify the pin numbering, look at the numbers printed on the PCB next to the pins.  You should see some numbers like '1', '11', on top and '2', '12' on the bottom.  Pin numbering starts from 1 on the top and continues left to right, top to bottom.  This pattern works out such that the odd numbers are all on the top, and even pin numbers are all on the bottom of the PCB.
[[File:Wrt310n JTAG pinout bottom PCB.jpg|thumb|220x220px]]
Here is a photo of the top of some JTAG flying wires connected to the wrt310n's JTAG header which has been soldered to the top and bottom of the PCB.  As you can see, pins 3, 5, 7, and 9 are the necessary JTAG data pins to connect like this: (TDI = 3, TDO = 5, TMS = 7, TCK = 9).  On the bottom of the board, the pinout shows many ground pins.  I have used pin 6 for GND.

====== Installing tjtag ======
After connecting the JTAG cable, you will need to make sure you have the tjtag software installed.  If you don't have a compiled binary executable for tjtag (binaries can be [https://sourceforge.net/projects/tjtag/files/v3.0.2-Final/ found here]), you'll need to download and compile the source code for tjtag like this:

 git clone https://github.com/oxplot/tjtag-pi.git
 cd tjtag-pi
 make     # for standard linux
 make pi  # for Raspberry Pi
 CFLAGS='-D WINDOWS_VERSION' make  # for Windows
 CFLAGS='-D __FreeBSD__' make      # for FreeBSD

You should end up with a binary executable called 'tjtag' ('tjtag.exe' for Windows).  You'll use this tool to clear the flash memory.  If you are using a parallel port cable on linux, make sure to load the kernel module if it was not autoloaded.  Sometimes the lp printer driver will grab the parallel port and prevent tjtag from accessing it.  You may have to unload the lp driver first, and reload the parallel port drivers:

 sudo rmmod lp  ## This should prevent tjtag error: &quot;Failed to lock /dev/parport0: No such device or address&quot;
 &lt;nowiki&gt;##&lt;/nowiki&gt; Remove drivers
 for driver in ppdev parport_pc parport; do sudo modprobe -r $driver; done
 &lt;nowiki&gt;##&lt;/nowiki&gt; Re-insert drivers
 for driver in ppdev parport_pc parport; do sudo modprobe -i $driver; done

====== Detecting Hardware via JTAG ======
To run a quick test to see if your router and flash chip are detected, run: ./tjtag '''-probeonly /noreset'''.  The router's microprocessor chip will sometimes halt and prevent the detection from working.  (You will see the probeonly command hang at &quot;Issuing Processor / Peripheral Reset ... Skipped&quot;).  Just retry a couple times, or try doing a 30/30/30 reset on the router and it should work. If you see error message &quot;Failed to open /dev/parport0: Permission denied&quot;, you need to run the command as root with '''sudo'''.  You'll see output like this:

 $ sudo ./tjtag -probeonly /noreset
 
 ==============================================
 &lt;nowiki&gt; &lt;/nowiki&gt;EJTAG Debrick Utility v3.0.1 Tornado-MOD
 ==============================================
 
 Probing bus ... Done
 
 Instruction Length set to 8
 
 CPU Chip ID: 00000100011110000101000101111111 (0478517F)
 &lt;nowiki&gt;***&lt;/nowiki&gt; Found a Broadcom BCM4785 Rev 1 CPU chip ***
 
 &lt;nowiki&gt; &lt;/nowiki&gt;   - EJTAG IMPCODE .......&lt;nowiki&gt; &lt;/nowiki&gt;: 00000000100000010000100100000100 (00810904)
 &lt;nowiki&gt; &lt;/nowiki&gt;   - EJTAG Version .......&lt;nowiki&gt; : 1 or 2.0
  &lt;/nowiki&gt;   - EJTAG DMA Support ...&lt;nowiki&gt; : Yes
  &lt;/nowiki&gt;   - EJTAG Implementation flags: R4k MIPS16 MIPS32
 
 Issuing Processor / Peripheral Reset ... Skipped
 Enabling Memory Writes ... Done
 Halting Processor ... &lt;Processor did NOT enter Debug Mode!&gt; ... Done
 Clearing Watchdog ... Done
 
 Probing Flash at (Flash Window: 0x1fc00000) ...
 Done
 
 Flash Vendor ID: 00000000000000000000000001111111 (0000007F)
 Flash Device ID: 00000000000000000010001011111001 (000022F9)
 &lt;nowiki&gt;***&lt;/nowiki&gt; Found a EON EN29LV320 2Mx16 BotB   (4MB) Flash Chip ***
 
 &lt;nowiki&gt; &lt;/nowiki&gt;   - Flash Chip Window Start ....&lt;nowiki&gt; : 1fc00000
  &lt;/nowiki&gt;   - Flash Chip Window Length ...&lt;nowiki&gt; : 00400000
  &lt;/nowiki&gt;   - Selected Area Start ........&lt;nowiki&gt; : 00000000
  &lt;/nowiki&gt;   - Selected Area Length .......&lt;nowiki&gt; : 00000000
 
 
 
  &lt;/nowiki&gt;*** REQUESTED OPERATION IS COMPLETE ***

====== Clearing Flash Memory via JTAG ======
You will need to reset both the kernel and nvram from flash memory.

To reset:
* kernel - run:  ./tjtag '''-erase:kernel''' '''/noreset'''
* nvram - run:  ./tjtag '''-erase:nvram''' '''/noreset'''
If tjtag does not detect the flash chip, you ''might'' need to pass the correct flag depending on the flash chip you have.  Different revisions of the wrt310n have been built using different flash chips.  To identify your chip, look on the bottom of the board.  It should be marked by a couple dots (See [http://www.dd-wrt.com/phpBB2/viewtopic.php?p=309000#309000 this forum thread for help identifying the location]).  The chip manufacturer and ID should be printed on it.  Some common chips found in wrt310n are:

/fc:19 ............. K8D3216UBC  2Mx16 BotB     (4MB)

/fc:102 ............. EON EN29LV320 2Mx16 BotB   (4MB)

The output from erasing kernel &amp; nvram should look like this:

 $ sudo ./tjtag -erase:kernel  /fc:102 /noreset
 
 ==============================================
 &lt;nowiki&gt; &lt;/nowiki&gt;EJTAG Debrick Utility v3.0.1 Tornado-MOD
 ==============================================
 
 Probing bus ... Done
 
 Instruction Length set to 8
 
 CPU Chip ID: 00000100011110000101000101111111 (0478517F)
 &lt;nowiki&gt;***&lt;/nowiki&gt; Found a Broadcom BCM4785 Rev 1 CPU chip ***
 
 &lt;nowiki&gt; &lt;/nowiki&gt;   - EJTAG IMPCODE .......&lt;nowiki&gt; &lt;/nowiki&gt;: 00000000100000010000100100000100 (00810904)
 &lt;nowiki&gt; &lt;/nowiki&gt;   - EJTAG Version .......&lt;nowiki&gt; : 1 or 2.0
   &lt;/nowiki&gt;   - EJTAG DMA Support ...&lt;nowiki&gt; : Yes
   &lt;/nowiki&gt;   - EJTAG Implementation flags: R4k MIPS16 MIPS32
 
 Issuing Processor / Peripheral Reset ... Skipped
 Enabling Memory Writes ... Done
 Halting Processor ... &lt;Processor did NOT enter Debug Mode!&gt; ... Done
 Clearing Watchdog ... Done
 
 Manual Flash Selection ... Done
 
 Flash Vendor ID: 00000000000000000000000001111111 (0000007F)
 Flash Device ID: 00000000000000000010001011111001 (000022F9)
 &lt;nowiki&gt;***&lt;/nowiki&gt; Manually Selected a EON EN29LV320 2Mx16 BotB   (4MB) Flash Chip ***
 
 &lt;nowiki&gt; &lt;/nowiki&gt;   - Flash Chip Window Start ....&lt;nowiki&gt; : 1fc00000
   &lt;/nowiki&gt;   - Flash Chip Window Length ...&lt;nowiki&gt; : 00400000
   &lt;/nowiki&gt;   - Selected Area Start ........&lt;nowiki&gt; : 1fc40000
   &lt;/nowiki&gt;   - Selected Area Length .......&lt;nowiki&gt; : 003b0000
  
  ***&lt;/nowiki&gt; You Selected to Erase the KERNEL.BIN ***
 
 =========================
 Erasing Routine Started
 =========================
 Total Blocks to Erase: 59
 
 Erasing block: 12 (addr = 1fc40000)...Done
 Erasing block: 13 (addr = 1fc50000)...Done
 Erasing block: 14 (addr = 1fc60000)...Done
 Erasing block: 15 (addr = 1fc70000)...Done
 Erasing block: 16 (addr = 1fc80000)...Done
 Erasing block: 17 (addr = 1fc90000)...Done
 Erasing block: 18 (addr = 1fca0000)...Done
 Erasing block: 19 (addr = 1fcb0000)...Done
 Erasing block: 20 (addr = 1fcc0000)...Done
 Erasing block: 21 (addr = 1fcd0000)...Done
 Erasing block: 22 (addr = 1fce0000)...Done
 Erasing block: 23 (addr = 1fcf0000)...Done
 Erasing block: 24 (addr = 1fd00000)...Done
 Erasing block: 25 (addr = 1fd10000)...Done
 Erasing block: 26 (addr = 1fd20000)...Done
 Erasing block: 27 (addr = 1fd30000)...Done
 Erasing block: 28 (addr = 1fd40000)...Done
 Erasing block: 29 (addr = 1fd50000)...Done
 Erasing block: 30 (addr = 1fd60000)...Done
 Erasing block: 31 (addr = 1fd70000)...Done
 Erasing block: 32 (addr = 1fd80000)...Done
 Erasing block: 33 (addr = 1fd90000)...Done
 Erasing block: 34 (addr = 1fda0000)...Done
 Erasing block: 35 (addr = 1fdb0000)...Done
 Erasing block: 36 (addr = 1fdc0000)...Done
 Erasing block: 37 (addr = 1fdd0000)...Done
 Erasing block: 38 (addr = 1fde0000)...Done
 Erasing block: 39 (addr = 1fdf0000)...Done
 Erasing block: 40 (addr = 1fe00000)...Done
 Erasing block: 41 (addr = 1fe10000)...Done
 Erasing block: 42 (addr = 1fe20000)...Done
 Erasing block: 43 (addr = 1fe30000)...Done
 Erasing block: 44 (addr = 1fe40000)...Done
 Erasing block: 45 (addr = 1fe50000)...Done
 Erasing block: 46 (addr = 1fe60000)...Done
 Erasing block: 47 (addr = 1fe70000)...Done
 Erasing block: 48 (addr = 1fe80000)...Done
 Erasing block: 49 (addr = 1fe90000)...Done
 Erasing block: 50 (addr = 1fea0000)...Done
 Erasing block: 51 (addr = 1feb0000)...Done
 Erasing block: 52 (addr = 1fec0000)...Done
 Erasing block: 53 (addr = 1fed0000)...Done
 Erasing block: 54 (addr = 1fee0000)...Done
 Erasing block: 55 (addr = 1fef0000)...Done
 Erasing block: 56 (addr = 1ff00000)...Done
 Erasing block: 57 (addr = 1ff10000)...Done
 Erasing block: 58 (addr = 1ff20000)...Done
 Erasing block: 59 (addr = 1ff30000)...Done
 Erasing block: 60 (addr = 1ff40000)...Done
 Erasing block: 61 (addr = 1ff50000)...Done
 Erasing block: 62 (addr = 1ff60000)...Done
 Erasing block: 63 (addr = 1ff70000)...Done
 Erasing block: 64 (addr = 1ff80000)...Done
 Erasing block: 65 (addr = 1ff90000)...Done
 Erasing block: 66 (addr = 1ffa0000)...Done
 Erasing block: 67 (addr = 1ffb0000)...Done
 Erasing block: 68 (addr = 1ffc0000)...Done
 Erasing block: 69 (addr = 1ffd0000)...Done
 Erasing block: 70 (addr = 1ffe0000)...Done
 =========================
 Erasing Routine Complete
 =========================
 elapsed time: 15 seconds
 
 
 &lt;nowiki&gt; &lt;/nowiki&gt;*** REQUESTED OPERATION IS COMPLETE ***

 
 $ sudo ./tjtag -erase:nvram  /fc:102 /noreset
 
 ==============================================
 &lt;nowiki&gt; &lt;/nowiki&gt;EJTAG Debrick Utility v3.0.1 Tornado-MOD
 ==============================================
 
 Probing bus ... Done
 
 Instruction Length set to 8
 
 CPU Chip ID: 00000100011110000101000101111111 (0478517F)
 &lt;nowiki&gt;***&lt;/nowiki&gt; Found a Broadcom BCM4785 Rev 1 CPU chip ***
 
 &lt;nowiki&gt; &lt;/nowiki&gt;   - EJTAG IMPCODE .......&lt;nowiki&gt; &lt;/nowiki&gt;: 00000000100000010000100100000100 (00810904)
 &lt;nowiki&gt; &lt;/nowiki&gt;   - EJTAG Version .......&lt;nowiki&gt; : 1 or 2.0
   &lt;/nowiki&gt;   - EJTAG DMA Support ...&lt;nowiki&gt; : Yes
   &lt;/nowiki&gt;   - EJTAG Implementation flags: R4k MIPS16 MIPS32
 
 Issuing Processor / Peripheral Reset ... Skipped
 Enabling Memory Writes ... Done
 Halting Processor ... &lt;Processor did NOT enter Debug Mode!&gt; ... Done
 Clearing Watchdog ... Done
 
 Manual Flash Selection ... Done
 
 Flash Vendor ID: 00000000000000000000000001111111 (0000007F)
 Flash Device ID: 00000000000000000010001011111001 (000022F9)
 &lt;nowiki&gt;***&lt;/nowiki&gt; Manually Selected a EON EN29LV320 2Mx16 BotB   (4MB) Flash Chip ***
 
 &lt;nowiki&gt; &lt;/nowiki&gt;   - Flash Chip Window Start ....&lt;nowiki&gt; : 1fc00000
   &lt;/nowiki&gt;   - Flash Chip Window Length ...&lt;nowiki&gt; : 00400000
   &lt;/nowiki&gt;   - Selected Area Start ........&lt;nowiki&gt; : 1fff0000
   &lt;/nowiki&gt;   - Selected Area Length .......&lt;nowiki&gt; : 00010000
  
  ***&lt;/nowiki&gt; You Selected to Erase the NVRAM.BIN ***
 
 =========================
 Erasing Routine Started
 =========================
 Total Blocks to Erase: 1
 
 Erasing block: 71 (addr = 1fff0000)...Done
 =========================
 Erasing Routine Complete
 =========================
 elapsed time: 1 seconds
 
 &lt;nowiki&gt; &lt;/nowiki&gt;*** REQUESTED OPERATION IS COMPLETE ***

====== Installing New Firmware/Kernel ======
To install new firmware &amp; kernel, you will need to tftp the '''mini build''' of dd-wrt to the router.  Upon booting after a 30/30/30 reset, the router will accept a tftp upload of the firmware.  The important part here is to get the timing right, have a kernel with appropriate wrt310n header, and '''WAIT''' at least 2-3 minutes '''AFTER''' a successful flash for nvram settings to be rebuilt.  Failing to wait for nvram to be rebuilt will usually re-brick the router and you will have to start over from clearing the nvram &amp; kernel via JTAG.
[[File:Screenshot 2014-09-17 19.28.09.png|thumb|220x220px]]
To install the new firmware, the procedure is as follows:
* Plug a cable into the LAN port of the router and your computer, and disable any wireless to the computer. Disable all firewalls and virus protection.
* Set your computer to a static IP (see image)
Use these settings:

 192.168.1.10  ip
 255.255.255.0 subnet
 192.168.1.1   gateway
 192.168.1.1   dns

* Perform 30/30/30 reset
* Unplug router
* Start pinging router continuously
* Plug in router while holding the reset button
* Immediately tftp the firmware after the first successful ping
** '''Timing is important!'''  If you keep getting failed pings indefinitely or see an error from tftp like &quot;Transfer timed out.&quot;, you are missing the upload window.
** If you are having problems getting timing right running commands manually, I suggest using this script (change firmware name according to the filename you saved it as, run from same directory):

 #!/bin/bash
 &lt;nowiki&gt;##&lt;/nowiki&gt; dd-wrt router tftp flashing script for *nix platforms
 &lt;nowiki&gt;## To use:
 ##&lt;/nowiki&gt;  - Make sure you are connected via LAN cable to router
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - Press reset button on router &amp; hold for 30 seconds
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - Unplug router while holding reset button for 30 seconds
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - Start this script and watch pings fail
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - Plug in router while still holding reset button for 30 seconds
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - Release reset
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - With any luck a ping succeeds and tftp uploads the firmware
 router_ip=192.168.1.1
 firmware=dd-wrt.v24_mini_wrt310N-redhawk0.bin
 
 if &lt;nowiki&gt;[[ $OSTYPE = *darwin* ]]; then
    &lt;/nowiki&gt; ping_args='-W 5'
 elif &lt;nowiki&gt;[[ $OSTYPE = *linux-gnu ]]; then
    &lt;/nowiki&gt; ping_args='-w 130'
 else
 &lt;nowiki&gt;  ping_args=''
   fi
   
   result=1
   while [ $result -ne 0 ]; do
    &lt;/nowiki&gt; ping -c 1 $ping_args $router_ip
 &lt;nowiki&gt;  result=$?
   done &amp;&amp; tftp $router_ip &lt;&lt;-EOF
    &lt;/nowiki&gt; connect $router_ip
 &lt;nowiki&gt;  binary
     put $firmware
   EOF&lt;/nowiki&gt;

 ## Windows batch script to upload firmware
 &lt;nowiki&gt;##&lt;/nowiki&gt; Make sure you have tftp installed via Control Panel first
 &lt;nowiki&gt;## http://avtech.com/Support/index.php?action=kb&amp;article=108
 ## To use:
 ##&lt;/nowiki&gt;  - Make sure you are connected via LAN cable to router
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - Press reset button on router &amp; hold for 30 seconds
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - Unplug router while holding reset button for 30 seconds
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - Start this script and watch pings fail
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - Plug in router while still holding reset button for 30 seconds
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - Release reset
 &lt;nowiki&gt;##&lt;/nowiki&gt;  - With any luck a ping succeeds and tftp uploads the firmware
 SET router_ip=192.168.1.1
 SET firmware=dd-wrt.v24_mini_wrt310N-redhawk0.bin
 
 &lt;nowiki&gt;:loop
  ping -n 1 -w 5 %router_ip%
  IF NOT %ERRORLEVEL%==0 (
      goto loop
  )
  tftp -i %router_ip% put %firmware%&lt;/nowiki&gt;

* If this step worked, you should see a success message from tftp like: 
&quot;Sent 2936864 bytes in 5.4 seconds&quot; 

* '''WAIT AT LEAST 2-3''' minutes while the new kernel is booted and nvram settings are built! '''Do NOT power off the router''' until this time has elapsed.  '''This step is important for the firmware to stick!'''
* Go to the router's web interface at http://192.168.1.1

If it worked, you should see the Router Management page and password reset dialog for dd-wrt.

If it didn't work, try unplugging router, starting tftp script, and trying again!
* After you have flashed the router with the special mini build, you can now use the dd-wrt web interface (Administration -&gt; Firmware Upgrade) to upload the dd-wrt.v24_std_generic build.

===Serial===
====Serial Pinouts====
 VCC  1 o
  TX  2 o
  RX  3 o
 N/C  4 o
 GND  5 o

====Serial Recovery====
{{Modified redhawk0 instructions|wrt160nv3}}

==Pictures==
&lt;center&gt;'''User Images'''
&lt;gallery caption=&quot;external&quot;&gt;
File:Linksys WRT310N v1 angled.jpg|angled
File:Linksys WRT310N v1 top.jpg|top
File:Linksys WRT310N v1 bottom.jpg|bottom
File:Linksys WRT310N v1 back.jpg|back
File:Linksys WRT310N v1 label.jpg|label
File:Linksys WRT310N v1 power supply.jpg|power supply
&lt;/gallery&gt;[[Has images::external| ]][[Has images::label| ]][[Has images::power adapter| ]]
&lt;gallery caption=&quot;internal&quot; mode=&quot;slideshow&quot;&gt;
File:Linksys WRT310N v1 board top.jpg|board top
File:Linksys WRT310N v1 CPU.jpg|CPU
File:Linksys WRT310N v1 RAM.jpg|RAM
File:Linksys WRT310N v1 BCM4321.jpg|BCM4321
File:Linksys WRT310N v1 board ID.jpg|CyberTAN board ID
File:Linksys WRT310N v1 board bot.jpg|board bottom
File:Linksys WRT310N v1 Flash.jpg|Flash
&lt;/gallery&gt;&lt;/center&gt;[[Has images::internal| ]]

[[Category:English Documentation]]</text>
      <sha1>88pqpblo2hi1vk6443muyrxxdrj3r5m</sha1>
    </revision>
  </page>